<?xml version="1.0" encoding="UTF-8"?>

<project name="crisp" default="jar" basedir="."
	 xmlns:j2seproject3="http://www.netbeans.org/ns/j2se-project/3" xmlns:j2seproject2="http://www.netbeans.org/ns/j2se-project/2" xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1" xmlns:jaxws="http://www.netbeans.org/ns/jax-ws/1">
    <description>Builds, tests, and runs the project crisp.</description>


    <!-- property definitions -->
    <property name="build.dir" value="build" />
    <property name="build.classes" value="build/classes" />
    <property name="dist.dir" value="dist" />
    <property name="javadoc.dir" value="javadoc" />
    <property name="packages.tag" value="packages/tag.jar" />

    <property name="sourcefiles"
	      value="de/saar/**/*.java,crisp/termparser/**/*.java,crisp/planningproblem/**/*.java,crisp/planner/lazygp/**/*.java,crisp/pddl/**/*.java,crisp/main/*.java,crisp/converter/**/*.java,crisp/tools/*.java,crisp/result/**/*.java,crisp/pcrispresult/**/*.java" />

    <property name="classfiles"
	      value="de/saar/**/*,crisp/termparser/**/*,crisp/planningproblem/**/*,crisp/planner/lazygp/**/*,crisp/pddl/**/*,crisp/main/*,crisp/converter/*,crisp/tools/*,crisp/result/**/*,crisp/pcrispresult/**/*" />

    <property name="unpacked.classes.basics" value="de/saar/chorus/term/**/*,de/saar/basic/*" />
    <property name="unpacked.classes.tag" value="de/saar/penguin/tag/**/*" />
    


    <target name="jar" depends="init,compile">
      <jar jarfile="dist/crisp.jar"
	   basedir="build/classes"
	   includes="${classfiles},${unpacked.classes.basics}">
            <manifest>
                <attribute name="Main-Class" value="crisp.main.Generate" />
            </manifest>
      </jar>
      <jar jarfile="dist/xtag-crisp.jar"
	   basedir="build/classes"
	   includes="${classfiles},${unpacked.classes.basics},${unpacked.classes.tag}">
            <manifest>
                <attribute name="Main-Class" value="crisp.main.GenerateXtag" />
            </manifest>
      </jar>

      <jar jarfile="dist/lazygp.jar"
	   basedir="build/classes"
	   includes="${classfiles},${unpacked.classes.basics}">
            <manifest>
                <attribute name="Main-Class" value="crisp.planner.lazygp.Planner" />
            </manifest>
      </jar>

      <jar jarfile="dist/pddl-converter.jar"
	   basedir="build/classes"
	   includes="${classfiles},${unpacked.classes.basics}">
            <manifest>
                <attribute name="Main-Class" value="crisp.converter.CRISPtoPDDL" />
            </manifest>
      </jar>
      <jar jarfile="dist/pks-converter.jar"
	   basedir="build/classes"
	   includes="${classfiles},${unpacked.classes.basics}">
            <manifest>
                <attribute name="Main-Class" value="crisp.converter.CRISPtoPKS" />
            </manifest>
      </jar>
      <jar jarfile="dist/crisp-sentence.jar"
	   basedir="build/classes"
	   includes="${classfiles},${unpacked.classes.basics}">
            <manifest>
                <attribute name="Main-Class" value="crisp.main.GenerateSentence" />
            </manifest>
      </jar>
    </target>

    <target name="compile" depends="init,-pre-compile,basics.unpacked,tag.unpacked">
      <javac srcdir="src" destdir="build/classes"
	     debug="true"
	     includes="${sourcefiles}" source="1.5"
	     fork="yes">
      <classpath>
	<pathelement path="${build.classes}" />
	<pathelement path="${packages.tag}" />
      </classpath>
      </javac>
    </target>

    <target name="-pre-compile">
      <javacc 
	  javacchome="packages/javacc-4.0/bin/lib"
	  target="src/crisp/pddl/PddlParser.jj" />
    </target>



    <target name="basics.unpacked" depends="init">
      <antcall target="unpack" >
	<param name="unpack.jar" value="packages/basics.jar" />
	<param name="unpack.jar.id" value="basics" />
      </antcall>
    </target>

    <target name="tag.unpacked" depends="init">
      <antcall target="unpack" >
	<param name="unpack.jar" value="packages/tag.jar" />
	<param name="unpack.jar.id" value="tag" />
      </antcall>
    </target>

  <target name="unpack" depends="check.unpack" unless="nobuild.unpack">
    <unjar src="${unpack.jar}" dest="${build.classes}" />
    <touch file="${build.classes}/timestamps-unpackjar/${unpack.jar.id}" />
  </target>

  <target name="check.unpack">
    <uptodate property="nobuild.unpack"
	      targetfile="${build.classes}/timestamps-unpackjar/${unpack.jar.id}">
      <srcfiles dir="." includes="${unpack.jar}" />
    </uptodate>
  </target>


    <target name="init">
      <mkdir dir="build" />
      <mkdir dir="build/classes" />
      <mkdir dir="build/classes/timestamps-unpackjar" />
      <mkdir dir="dist" />
      <mkdir dir="javadoc"/>
    </target>

    <target name="javadoc" depends="init">
        <javadoc destdir="javadoc" sourcepath="src"/>              
    </target>


    <!--
    ===============
    CLEANUP SECTION
    ===============
    -->
    <target name="deps-clean" depends="init" unless="no.deps"/>
    <target name="-do-clean" depends="init">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>
    <target name="-post-clean">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="clean" depends="init,deps-clean,-do-clean,-post-clean" description="Clean build products."/>



    <!-- targets for Netbeans -->
    <target name="run" depends="init,compile" description="Run a main class.">
        <j2seproject1:java>
            <customize>
                <arg line="${application.args}"/>
            </customize>
        </j2seproject1:java>
    </target>

    <import file="nbproject/profiler-build-impl.xml"/>
    <target name="compile-single" />
    <target name="compile-test-single" />
</project>

/* Generated By:JavaCC: Do not edit this line. PddlParserTokenManager.java */
package crisp.pddl;
import crisp.planningproblem.*;
import crisp.planningproblem.goal.*;
import crisp.planningproblem.effect.*;
import de.saar.chorus.term.*;
import java.io.*;
import java.util.*;

public class PddlParserTokenManager implements PddlParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x180L) != 0L)
         {
            jjmatchedKind = 68;
            return 33;
         }
         if ((active1 & 0x1L) != 0L)
            return 35;
         if ((active0 & 0x7befdcfbe00L) != 0L)
            return 52;
         if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 68;
            return 15;
         }
         if ((active0 & 0x4000000000L) != 0L)
            return 42;
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 68;
            return 268;
         }
         if ((active1 & 0x4L) != 0L)
            return 39;
         if ((active0 & 0x8000000000000000L) != 0L)
            return 25;
         if ((active0 & 0x7f00002304000L) != 0L)
         {
            jjmatchedKind = 68;
            return 45;
         }
         if ((active1 & 0x2L) != 0L)
            return 37;
         return -1;
      case 1:
         if ((active0 & 0x800000L) != 0L)
            return 51;
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 1;
            return 32;
         }
         if ((active0 & 0x40008000000L) != 0L)
            return 110;
         if ((active0 & 0x100000000000L) != 0L)
            return 45;
         if ((active0 & 0x2400008000L) != 0L)
            return 102;
         if ((active0 & 0xfe80002304100L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 1;
            return 45;
         }
         if ((active0 & 0x800L) != 0L)
            return 57;
         if ((active0 & 0x200000000L) != 0L)
            return 206;
         if ((active0 & 0x18080001000L) != 0L)
            return 197;
         if ((active0 & 0x10000200L) != 0L)
            return 203;
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 1;
            return 43;
         }
         return -1;
      case 2:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 2;
            return 43;
         }
         if ((active0 & 0xfc00002304180L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 2;
            return 45;
         }
         if ((active0 & 0x280000000000L) != 0L)
            return 45;
         if ((active0 & 0x18080001000L) != 0L)
            return 196;
         if ((active0 & 0x8000000L) != 0L)
            return 133;
         if ((active0 & 0x2400000000L) != 0L)
            return 220;
         if ((active0 & 0x800L) != 0L)
            return 56;
         return -1;
      case 3:
         if ((active0 & 0x2400000000L) != 0L)
            return 219;
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 3;
            return 43;
         }
         if ((active0 & 0x800L) != 0L)
            return 55;
         if ((active0 & 0x3400002304180L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 3;
            return 45;
         }
         if ((active0 & 0xc800000000000L) != 0L)
            return 45;
         if ((active0 & 0x10000001000L) != 0L)
            return 195;
         return -1;
      case 4:
         if ((active0 & 0x2400000000L) != 0L)
            return 218;
         if ((active0 & 0x10000000000L) != 0L)
            return 194;
         if ((active0 & 0x3400002304180L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 68;
               jjmatchedPos = 4;
            }
            return 45;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 67;
               jjmatchedPos = 4;
            }
            return 43;
         }
         return -1;
      case 5:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 5;
            return 43;
         }
         if ((active0 & 0x10000000000L) != 0L)
            return 193;
         if ((active0 & 0x304000L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 5;
            return 45;
         }
         if ((active0 & 0x3400002000180L) != 0L)
            return 45;
         if ((active0 & 0x2400000000L) != 0L)
            return 217;
         return -1;
      case 6:
         if ((active0 & 0x2400000000L) != 0L)
            return 216;
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 6;
            return 43;
         }
         if ((active0 & 0x300000L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 6;
            return 45;
         }
         if ((active0 & 0x4000L) != 0L)
            return 45;
         if ((active0 & 0x10000000000L) != 0L)
            return 192;
         return -1;
      case 7:
         if ((active0 & 0x10000000000L) != 0L)
            return 191;
         if ((active0 & 0x400000000L) != 0L)
            return 215;
         if ((active0 & 0x300000L) != 0L)
            return 45;
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 7;
            return 43;
         }
         if ((active0 & 0x2000000000L) != 0L)
            return 235;
         return -1;
      case 8:
         if ((active0 & 0x4000000000L) != 0L)
            return 43;
         if ((active0 & 0x2000000000L) != 0L)
            return 234;
         if ((active0 & 0x10000000000L) != 0L)
            return 190;
         if ((active0 & 0x400000000L) != 0L)
            return 214;
         return -1;
      case 9:
         if ((active0 & 0x400000000L) != 0L)
            return 213;
         if ((active0 & 0x10000000000L) != 0L)
            return 189;
         return -1;
      case 10:
         if ((active0 & 0x400000000L) != 0L)
            return 212;
         return -1;
      case 11:
         if ((active0 & 0x400000000L) != 0L)
            return 211;
         return -1;
      case 12:
         if ((active0 & 0x400000000L) != 0L)
            return 210;
         return -1;
      case 13:
         if ((active0 & 0x400000000L) != 0L)
            return 209;
         return -1;
      case 14:
         if ((active0 & 0x400000000L) != 0L)
            return 208;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 69);
      case 41:
         return jjStopAtPos(0, 70);
      case 42:
         return jjStartNfaWithStates_0(0, 65, 37);
      case 43:
         return jjStartNfaWithStates_0(0, 63, 25);
      case 44:
         return jjStopAtPos(0, 71);
      case 45:
         return jjStartNfaWithStates_0(0, 64, 35);
      case 47:
         return jjStartNfaWithStates_0(0, 66, 39);
      case 58:
         return jjMoveStringLiteralDfa1_0(0x7befdcfbe00L);
      case 60:
         jjmatchedKind = 59;
         return jjMoveStringLiteralDfa1_0(0x2000000000000000L);
      case 61:
         return jjStopAtPos(0, 58);
      case 62:
         jjmatchedKind = 60;
         return jjMoveStringLiteralDfa1_0(0x4000000000000000L);
      case 63:
         return jjMoveStringLiteralDfa1_0(0x4000000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x80000000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa1_0(0x180L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_0(0x3000000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(0x400000000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa1_0(0x4000000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa1_0(0x300000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x200000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x100000000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa1_0(0x4000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_0(0x8000000000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa1_0(0x2000000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa1_0(0x800000000000L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStopAtPos(1, 61);
         else if ((active0 & 0x4000000000000000L) != 0L)
            return jjStopAtPos(1, 62);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000200100000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x18080001000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0x6400008000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x40008000080L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000200L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa2_0(active0, 0x60020000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000240000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x8600000010100L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x21007002000L);
      case 82:
      case 114:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 44, 45);
         return jjMoveStringLiteralDfa2_0(active0, 0x4400L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x800L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, 0L);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x1811000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000L);
      case 68:
      case 100:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 43, 45);
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000c80400L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x8040000000080L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x240000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x180e002d000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x4420004002000L);
      case 84:
      case 116:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 45, 45);
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x6400000200L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa3_0(active0, 0x8100000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa3_0(active0, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x400062020100L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L);
      case 68:
      case 100:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 50, 45);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x20008002000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x10340080L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0x80008000L);
      case 78:
      case 110:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 47, 45);
         return jjMoveStringLiteralDfa4_0(active0, 0x10000401200L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x800L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa4_0(active0, 0x400L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x7c01800000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x1008000000000L);
      case 84:
      case 116:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 51, 45);
         return jjMoveStringLiteralDfa4_0(active0, 0x200080000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x7401008000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000000L);
      case 67:
      case 99:
         if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(4, 27);
         return jjMoveStringLiteralDfa5_0(active0, 0x20000000200L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x10000002000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0x2040000010800L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x200800100L);
      case 76:
      case 108:
         if ((active0 & 0x20000L) != 0L)
         {
            jjmatchedKind = 17;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active0, 0x400070004000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa5_0(active0, 0x80300000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x80L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000L);
      case 83:
      case 115:
         if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(4, 35);
         return jjMoveStringLiteralDfa5_0(active0, 0x1000L);
      case 84:
      case 116:
         if ((active0 & 0x40000L) != 0L)
            return jjStopAtPos(4, 18);
         else if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(4, 39);
         return jjMoveStringLiteralDfa5_0(active0, 0x1000002000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x60000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_0(active0, 0x40000010000L);
      case 69:
      case 101:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(5, 7, 45);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(5, 25, 45);
         return jjMoveStringLiteralDfa6_0(active0, 0x4000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x1008038a400L);
      case 76:
      case 108:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 46, 45);
         return jjMoveStringLiteralDfa6_0(active0, 0x5000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000L);
      case 78:
      case 110:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(5, 8, 45);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x20200000000L);
      case 82:
      case 114:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 49, 45);
         break;
      case 83:
      case 115:
         if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(5, 11);
         else if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 48, 45);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0x6400401200L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L);
}
private final int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x20001000L);
      case 67:
      case 99:
         if ((active0 & 0x80000L) != 0L)
            return jjStopAtPos(6, 19);
         return jjMoveStringLiteralDfa7_0(active0, 0x2000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x1004000000L);
      case 72:
      case 104:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(6, 22);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x6400000200L);
      case 76:
      case 108:
         if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(6, 23);
         return jjMoveStringLiteralDfa7_0(active0, 0x1000000L);
      case 77:
      case 109:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(6, 14, 45);
         break;
      case 78:
      case 110:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(6, 15);
         else if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(6, 33);
         return jjMoveStringLiteralDfa7_0(active0, 0x20000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x10000400L);
      case 84:
      case 116:
         if ((active0 & 0x80000000L) != 0L)
            return jjStopAtPos(6, 31);
         else if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(6, 42);
         return jjMoveStringLiteralDfa7_0(active0, 0x10000010000L);
      case 90:
      case 122:
         return jjMoveStringLiteralDfa7_0(active0, 0x300000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L);
}
private final int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa8_0(active0, 0x20020000000L);
      case 69:
      case 101:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(7, 20, 45);
         else if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(7, 21, 45);
         else if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(7, 28);
         return jjMoveStringLiteralDfa8_0(active0, 0x41000400L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0x10000000000L);
      case 77:
      case 109:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(7, 26);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa8_0(active0, 0x1000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0x6000000200L);
      case 83:
      case 115:
         if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(7, 16);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa8_0(active0, 0x1000000000L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L);
}
private final int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(8, 29);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active0, 0x1400000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0x20000000000L);
      case 76:
      case 108:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(8, 24);
         return jjMoveStringLiteralDfa9_0(active0, 0x40000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa9_0(active0, 0x400L);
      case 78:
      case 110:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 37, 234);
         else if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 38, 43);
         return jjMoveStringLiteralDfa9_0(active0, 0x200L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0x10000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x3000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private final int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active0, 0x400000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa10_0(active0, 0x40002400L);
      case 78:
      case 110:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 40, 189);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa10_0(active0, 0x1000000000L);
      case 83:
      case 115:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(9, 9);
         else if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(9, 12);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa10_0(active0, 0x20000000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private final int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active0, 0x400000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa11_0(active0, 0x20000000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x400L);
      case 83:
      case 115:
         if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(10, 13);
         else if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(10, 36);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active0, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private final int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x400000000L);
      case 69:
      case 101:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(11, 30);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa12_0(active0, 0x20000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa12_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private final int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(12, 41);
         break;
      case 83:
      case 115:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(12, 10);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa13_0(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private final int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa14_0(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private final int jjMoveStringLiteralDfa14_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 79:
      case 111:
         return jjMoveStringLiteralDfa15_0(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
private final int jjMoveStringLiteralDfa15_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(15, 34, 47);
         break;
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 278;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 52:
                  if (curChar == 61 && kind > 53)
                     kind = 53;
                  break;
               case 32:
               case 45:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(45);
                  break;
               case 268:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(45);
                  break;
               case 33:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(45);
                  break;
               case 15:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(45);
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(8, 9);
                  else if (curChar == 58)
                     jjAddStates(0, 14);
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 39;
                  else if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 59)
                     jjCheckNAddStates(15, 17);
                  else if (curChar == 63)
                     jjstateSet[jjnewStateCnt++] = 42;
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 52)
                        kind = 52;
                     jjCheckNAdd(7);
                  }
                  else if (curChar == 48)
                  {
                     if (kind > 52)
                        kind = 52;
                  }
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(15, 17);
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 3:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 48 && kind > 52)
                     kind = 52;
                  break;
               case 6:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAdd(7);
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAdd(7);
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(8, 9);
                  break;
               case 9:
                  if (curChar == 46)
                     jjCheckNAdd(10);
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAdd(10);
                  break;
               case 25:
                  if (curChar == 61 && kind > 54)
                     kind = 54;
                  break;
               case 26:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 35:
                  if (curChar == 61 && kind > 55)
                     kind = 55;
                  break;
               case 36:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 61 && kind > 56)
                     kind = 56;
                  break;
               case 38:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 61 && kind > 57)
                     kind = 57;
                  break;
               case 40:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 63)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 43:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 46:
                  if (curChar == 58)
                     jjAddStates(0, 14);
                  break;
               case 71:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 92:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 124:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 148:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 170:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 187:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 214:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 234:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 249:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 264:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 273:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 219:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 197:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 52:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 220:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 32:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(45);
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 216:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  else if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 268:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(45);
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 217:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 195:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 102:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 110:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 33:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(45);
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 218:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 196:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 15:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(45);
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 0:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(45);
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(18, 19);
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 1:
                  jjAddStates(15, 17);
                  break;
               case 11:
                  if ((0x400000004000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 12:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 16:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if ((0x2000000020L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 18:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 27:
                  if ((0x2000000020L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 28:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 34:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 42:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAdd(43);
                  break;
               case 43:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAdd(43);
                  break;
               case 44:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(45);
                  break;
               case 45:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(45);
                  break;
               case 47:
                  if ((0x8000000080000L & l) != 0L && kind > 32)
                     kind = 32;
                  break;
               case 48:
                  if ((0x1000000010000L & l) != 0L)
                     jjCheckNAdd(47);
                  break;
               case 49:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 53:
                  if ((0x8000000080L & l) != 0L && kind > 32)
                     kind = 32;
                  break;
               case 54:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
               case 80:
               case 112:
               case 136:
               case 158:
               case 208:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(47);
                  break;
               case 60:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 72:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 81:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 93:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if ((0x40000000400L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 103:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if ((0x200000002000000L & l) != 0L && kind > 32)
                     kind = 32;
                  break;
               case 105:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 111:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 113:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 125:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 137:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 149:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 159:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 171:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
               case 199:
               case 243:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(47);
                  break;
               case 182:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 188:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 198:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 200:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if ((0x100000001000L & l) != 0L && kind > 32)
                     kind = 32;
                  break;
               case 206:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 209:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 215:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 221:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(47);
                  break;
               case 224:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 235:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 244:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 250:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 261:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(18, 19);
                  break;
               case 262:
                  if ((0x1000000010000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 263:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 265:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 269:
                  if ((0x400000004000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 270:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 274:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(15, 17);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 278 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   52, 58, 79, 103, 111, 135, 157, 180, 198, 204, 207, 222, 242, 259, 260, 1, 
   2, 4, 268, 277, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, "\75", "\74", "\76", "\74\75", "\76\75", "\53", "\55", "\52", 
"\57", null, null, "\50", "\51", "\54", };
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0xffffffffffffff81L, 0xffL, 
};
static final long[] jjtoSkip = {
   0x7eL, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x40L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[278];
private final int[] jjstateSet = new int[556];
protected char curChar;
public PddlParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public PddlParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 278; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100003600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

}
